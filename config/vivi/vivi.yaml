%YAML:1.0

#common parameters
imu_topic: "/imu/data"
image_topic: "/rgb/image"
output_path: "/home/zj/final_output/vins-mono/third-floor-csc1/"

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 640
image_height: 480

distortion_parameters:
   k1: 0.03233959506421442
   k2: -0.12483600171515911
   p1: -0.0008630695905382894
   p2: 0.0017460183154471157
projection_parameters:
   fx: 523.9029710189141
   fy: 525.1280072288679
   cx: 318.07353454990124
   cy: 234.2647175281021

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0 

#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   # data: [ 3.1493818660272455e-02, -1.2995345292290961e-03, -9.9950310184421221e-01,
   #          -9.9948281425563557e-01,-6.5436587628213694e-03, -3.1484671470905778e-02,
   #           -6.4994918131320301e-03, 9.9997774562237307e-01,-1.5049472309474066e-03]
   data: [ -0.010321623700898341, -0.9999130390983744, -0.008208430131825983,
            0.008167014303598563, -0.008292892111799344, 0.9999322616146487,
           -0.999913378229105, 0.010253886164477921, 0.008251900204441276]
   
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-0.03229554082192394, -0.026378657567605192, -0.03263380818421379]
   # data: [ -2.2718255534209101e-03, -3.7873054556903464e-02, 5.2005592015607893e-02]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

# #imu parameters       The more accurate parameters you provide, the better performance
# acc_n: 0.0126          # accelerometer measurement noise standard deviation. 
# gyr_n: 0.0073         # gyroscope measurement noise standard deviation.   
# acc_w: 2.6e-7         # accelerometer bias random work noise standard deviation.
# gyr_w: 9.798339194666108e-07       # gyroscope bias random work noise standard deviation.

#imu parameters       The more accurate parameters you provide, the better performance\
# acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2
# gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05
# acc_w: 0.0002         # accelerometer bias random work noise standard deviation.  #0.02
# gyr_w: 2.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5
acc_n: 25.0e-05        # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 5.00e-02         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 4.00e-06        # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.22e-04       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81     # gravity magnitude

#loop closure parameters
loop_closure: 0                    # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/zj/vins_output/openloris/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
